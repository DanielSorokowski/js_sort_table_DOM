{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","elements","querySelectorAll","users","addEventListener","e","element","target","tagName","sortUsers","innerText","renderTable","forEach","tr","push","Name","children","Position","Age","Number","Salary","replace","table","value","sort","a","b","localeCompare","Error","innerHTML","tableElement","createElement","salary","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","appendChild"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAWD,EAAUE,iBAAiB,MACtCC,EAAQ,GAEdN,EAAUO,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAUD,EAAEE,OAEM,OAApBD,EAAQE,UACVC,EAAUN,EAAOG,EAAQI,WACzBC,EAAYR,MAIhBF,EAASW,QAAQ,SAAAC,GACfV,EAAMW,KACJ,CACEC,KAAMF,EAAGG,SAAS,GAAGN,UACrBO,SAAUJ,EAAGG,SAAS,GAAGN,UACzBQ,IAAKC,OAAON,EAAGG,SAAS,GAAGN,WAC3BU,OAAQD,OAAON,EAAGG,SAAS,GAAGN,UAAUW,QAAQ,QAAS,SAK/D,IAAMZ,EAAY,SAACa,EAAOC,GACxBD,EAAME,KAAK,SAACC,EAAGC,GACT,GAAoB,iBAAbD,EAAEF,GACJE,OAAAA,EAAEF,GAASG,EAAEH,GACf,GAAwB,iBAAbE,EAAEF,GACXE,OAAAA,EAAEF,GAAOI,cAAcD,EAAEH,IAG5B,MAAA,IAAIK,MAAM,yBAIdjB,EAAc,SAACW,GACnBtB,EAAU6B,UAAY,GAEtBP,EAAMV,QAAQ,SAAAN,GACNwB,IAAAA,EAAehC,SAASiC,cAAc,MACtCC,EAAS1B,EAAQc,OAAOa,eAAe,QAAS,CACpDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAGzBP,EAAaD,UACJvB,OAAAA,OAAAA,EAAQS,KACTT,qBAAAA,OAAAA,EAAQW,SACRX,qBAAAA,OAAAA,EAAQY,IACRc,qBAAAA,OAAAA,EAJR,SAOAhC,EAAUsC,YAAYR","file":"main.f891a11f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst elements = tableBody.querySelectorAll('tr');\nconst users = [];\n\ntableHead.addEventListener('click', e => {\n  const element = e.target;\n\n  if (element.tagName === 'TH') {\n    sortUsers(users, element.innerText);\n    renderTable(users);\n  }\n});\n\nelements.forEach(tr => {\n  users.push(\n    {\n      Name: tr.children[0].innerText,\n      Position: tr.children[1].innerText,\n      Age: Number(tr.children[2].innerText),\n      Salary: Number(tr.children[3].innerText.replace(/[$,]/g, '')),\n    }\n  );\n});\n\nconst sortUsers = (table, value) => {\n  table.sort((a, b) => {\n    if (typeof a[value] === 'number') {\n      return a[value] - b[value];\n    } else if (typeof a[value] === 'string') {\n      return a[value].localeCompare(b[value]);\n    }\n\n    throw new Error('wrong typeof value');\n  });\n};\n\nconst renderTable = (table) => {\n  tableBody.innerHTML = '';\n\n  table.forEach(element => {\n    const tableElement = document.createElement('tr');\n    const salary = element.Salary.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    });\n\n    tableElement.innerHTML = (\n      `<td>${element.Name}</td>\n      <td>${element.Position}</td>\n      <td>${element.Age}</td>\n      <td>${salary}</td>`\n    );\n\n    tableBody.appendChild(tableElement);\n  });\n};\n"]}